{"ast":null,"code":"var _jsxFileName = \"/Users/henry/Documents/GitHub/rental_car_web/frontend/src/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  //const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Call the server API to check if the given email ID already exists\n  const checkAccountExists = callback => {\n    fetch(\"http://localhost:3080/check-account\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(r => r.json()).then(r => {\n      callback(r === null || r === void 0 ? void 0 : r.userExists);\n    });\n  };\n\n  // Log in a user using email and password\n  const logIn = () => {\n    fetch(\"http://localhost:3080/auth\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(r => r.json()).then(r => {\n      if ('success' === r.message) {\n        localStorage.setItem(\"user\", JSON.stringify({\n          email,\n          token: r.token\n        }));\n        props.setLoggedIn(true);\n        props.setEmail(email);\n        navigate(\"/\");\n      } else {\n        window.alert(\"Wrong email or password\");\n      }\n    });\n  };\n  const onButtonClick = () => {\n    // Set initial error values to empty\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    // Check if the user has entered both fields correctly\n    if (\"\" === email) {\n      setEmailError(\"Please enter your email\");\n      return;\n    }\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\n      setEmailError(\"Please enter a valid email\");\n      return;\n    }\n    if (\"\" === password) {\n      setPasswordError(\"Please enter a password\");\n      return;\n    }\n    if (password.length < 7) {\n      setPasswordError(\"The password must be 8 characters or longer\");\n      return;\n    }\n\n    // Authentication calls will be made here...       \n    // Check if email has an account associated with it\n    checkAccountExists(accountExists => {\n      // If yes, log in \n      if (accountExists) logIn();else\n        // Else, ask user if they want to create a new account and if yes, then log in\n        if (window.confirm(\"An account does not exist with this email address: \" + email + \". Do you want to create a new account?\")) {\n          logIn();\n        }\n    });\n  };\n  useEffect(() => {\n    // Fetch the user email and token from local storage\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    // If the token/email does not exist, mark the user as logged out\n    if (!user || !user.token) {\n      setLoggedIn(false);\n      return;\n    }\n\n    // If the token exists, verify it with the auth server to see if it is valid\n    fetch(\"http://localhost:3080/verify\", {\n      method: \"POST\",\n      headers: {\n        'jwt-token': user.token\n      }\n    }).then(r => r.json()).then(r => {\n      setLoggedIn('success' === r.message);\n      setEmail(user.email || \"\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        placeholder: \"Enter your email here\",\n        onChange: ev => setEmail(ev.target.value),\n        className: \"inputBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"errorLabel\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        placeholder: \"Enter your password here\",\n        onChange: ev => setPassword(ev.target.value),\n        className: \"inputBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"errorLabel\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputButton\",\n        type: \"button\",\n        onClick: onButtonClick,\n        value: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 12\n  }, this);\n};\n_s(Login, \"pXp7utmw/6qp0xDNU754slQTke0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useEffect","jsxDEV","_jsxDEV","Login","props","_s","loggedIn","setLoggedIn","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","navigate","checkAccountExists","callback","fetch","method","headers","body","JSON","stringify","email","then","r","json","userExists","logIn","message","localStorage","setItem","token","setEmail","window","alert","onButtonClick","test","length","accountExists","confirm","user","parse","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","ev","target","type","onClick","_c","$RefreshReg$"],"sources":["/Users/henry/Documents/GitHub/rental_car_web/frontend/src/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\n\nconst Login = (props) => {\n    const [loggedIn, setLoggedIn] = useState(false)\n    //const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [emailError, setEmailError] = useState(\"\")\n    const [passwordError, setPasswordError] = useState(\"\")\n    \n    const navigate = useNavigate();\n\n    // Call the server API to check if the given email ID already exists\n    const checkAccountExists = (callback) => {\n        fetch(\"http://localhost:3080/check-account\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({email})\n        })\n        .then(r => r.json())\n        .then(r => {\n            callback(r?.userExists)\n        })\n    }\n\n    // Log in a user using email and password\n    const logIn = () => {\n        fetch(\"http://localhost:3080/auth\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({email, password})\n        })\n        .then(r => r.json())\n        .then(r => {\n            if ('success' === r.message) {\n                localStorage.setItem(\"user\", JSON.stringify({email, token: r.token}))\n                props.setLoggedIn(true)\n                props.setEmail(email)\n                navigate(\"/\")\n            } else {\n                window.alert(\"Wrong email or password\")\n            }\n        })\n    }\n        \n    const onButtonClick = () => {\n\n        // Set initial error values to empty\n        setEmailError(\"\")\n        setPasswordError(\"\")\n\n        // Check if the user has entered both fields correctly\n        if (\"\" === email) {\n            setEmailError(\"Please enter your email\")\n            return\n        }\n\n        if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\n            setEmailError(\"Please enter a valid email\")\n            return\n        }\n\n        if (\"\" === password) {\n            setPasswordError(\"Please enter a password\")\n            return\n        }\n\n        if (password.length < 7) {\n            setPasswordError(\"The password must be 8 characters or longer\")\n            return\n        }\n\n        // Authentication calls will be made here...       \n        // Check if email has an account associated with it\n        checkAccountExists(accountExists => {\n            // If yes, log in \n            if (accountExists)\n                logIn()\n            else\n            // Else, ask user if they want to create a new account and if yes, then log in\n                if (window.confirm(\"An account does not exist with this email address: \" + email + \". Do you want to create a new account?\")) {\n                    logIn()\n                }\n        })  \n    }\n\n    useEffect(() => {\n        // Fetch the user email and token from local storage\n        const user = JSON.parse(localStorage.getItem(\"user\"))\n    \n        // If the token/email does not exist, mark the user as logged out\n        if (!user || !user.token) {\n          setLoggedIn(false)\n          return\n        }\n    \n        // If the token exists, verify it with the auth server to see if it is valid\n        fetch(\"http://localhost:3080/verify\", {\n                method: \"POST\",\n                headers: {\n                    'jwt-token': user.token\n                  }\n            })\n            .then(r => r.json())\n            .then(r => {\n                setLoggedIn('success' === r.message)\n                setEmail(user.email || \"\")\n            })\n      }, [])\n\n    return <div className={\"mainContainer\"}>\n        <div className={\"titleContainer\"}>\n            <div>Login</div>\n        </div>\n        <br />\n        <div className={\"inputContainer\"}>\n            <input\n                value={email}\n                placeholder=\"Enter your email here\"\n                onChange={ev => setEmail(ev.target.value)}\n                className={\"inputBox\"} />\n            <label className=\"errorLabel\">{emailError}</label>\n        </div>\n        <br />\n        <div className={\"inputContainer\"}>\n            <input\n                value={password}\n                placeholder=\"Enter your password here\"\n                onChange={ev => setPassword(ev.target.value)}\n                className={\"inputBox\"} />\n            <label className=\"errorLabel\">{passwordError}</label>\n        </div>\n        <br />\n        <div className={\"inputContainer\"}>\n            <input\n                className={\"inputButton\"}\n                type=\"button\"\n                onClick={onButtonClick}\n                value={\"Log in\"} />\n        </div>\n    </div>\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}